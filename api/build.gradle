buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.1'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '1.2.1'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

shadowJar {
    mergeServiceFiles()
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

jar {
    manifest {
        attributes 'Main-Class': 'io.bunnies.baas.BaasApplication'
    }
}

def loadProperties(propsFilename) {
    def props = new Properties()
    new File(propsFilename).withInputStream {
        stream -> props.load(stream)
    }
    return new ConfigSlurper().parse(props)
}

def config = loadProperties("build.properties")
def env = System.getenv()

repositories {
    mavenCentral()
}

dependencies {
    compile group: "io.dropwizard", name: "dropwizard-core", version: "0.8.1"

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task buildInfo {
    if (env.BUILD_NUMBER != null) {
        ext.build_number = "${env.BUILD_NUMBER}"
    } else {
        def tag_cmd = "git rev-parse --short HEAD"
        def tag_proc = tag_cmd.execute()
        tag_proc.waitFor()
        def branch_cmd = "git branch"
        def branch_proc = branch_cmd.execute()
        branch_proc.waitFor()
        if (tag_proc.exitValue() == 0 && branch_proc.exitValue() == 0) {
            ext.build_number = branch_proc.text.split(' ')[1].trim() + "-" + tag_proc.text.trim()
        } else {
            ext.build_number = "unknown"
        }
    }
}

version = "${config.baas_version}.${project.buildInfo.build_number}"
